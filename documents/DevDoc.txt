----------------------------------------------------LANCER LE PROTJET----------------------------------------------------
//Aller dans le terminal à la racine de job_seekers_app
cd Epitech/Rendu/job_seekers_app
//commande 
symfony server:start
//Aller dans le moteur de recherche internet, taper l'adresse HTTPS suivante
https://127.0.0.1:8000/job_seekers_app
-------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------VERIFIER BASE SQL----------------------------------------------------
//Aller dans le terminaln, taper la commande :
mysql -u root -p
//Utiliser la bonne base de donnée
USE symfony
//voir toutes les tables de cette base de donnée
show tables;
//voir les champs de la table application
describe application;
describe **Nom de table**;
//voir toutes les lignes de la table application
SELECT * FROM application;
//Voir toutes les lignes d'une table
SELECT * FROM **Nom de table**;
//Voir toutes les lignes d'une table trier par colone 3
SELECT * FROM **Nom de table** ORDER BY 3;
//Voir toutes les lignes de la table application à condition que job_advertisement soit null
SELECT * FROM application WHERE job_advertisement is null;
//Voir toutes les lignes d'une table à condition que job_advertisement soit null
SELECT * FROM **Nom de table** WHERE **Condition**;
-------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------CHANGER L'ENTITY-----------------------------------------------------
//si l'ENTITY n'est pas convenable dans sa Xième version, changer l'info dans src>Entity>**NOM_ENTITY**
php bin/console make:entity
// Aller dans le terminal à la racine de job_seekers_app, taper les commandes :
php bin/console make:migration
php bin/console doctrine:schema:update --force
//si vous avez fait des changement manuels dans l'entité
php bin/console make:entity --regenerate
-------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------BARRE DE NAVIGATION----------------------------------------------------
//dans le fichier templates>base.html.twig, mettre la barre de nav en dehors de <body></body> et juste après 
//<head></head> dans un block {% block navbar %}<nav class=""></nav>{% endblock %}
// si la navbar figure dans le body elle ne serra pas vue dans le site.
-------------------------------------------------------------------------------------------------------------------------
-------------------------------------ONE TO ONE || UN FORMULAIRE DANS UN FORMULAIRE--------------------------------------
--- J'ai déjà créer toutes les entités avec tous les champs, même ceux de targetEntity
//exemple contact dans application
//aller dans src/Entity/Application.php supprimer le champ||field contact ainsi que toutes les fonctions associées(get et 
//set).
//aller dans templates/application/home.html.twig et suprimer la ligne <td>{{ application.contact }}</td>
//rechercher toutes les mentions de contact dans les fichiers et les supprimer
//dans le terminale
--- 
php bin/console make:migration
php bin/console doctrine:make:migration
//dans le terminale
cd Epitech/Rendu/job_seekers_app
php bin/console make:entity 
//->Contact
php bin/console make:migration
php bin/console doctrine:make:migration
php bin/console make:crud
// action qui cré les les fichiers :
// - templates/contact/_delete_form.html.twig
// - templates/contact/_form.html.twig
// - templates/contact/_form.html.twig
// - templates/contact/edit.html.twig
// - templates/contact/index.html.twig
// - templates/contact/new.html.twig
// - templates/contact/show.html.twig
//->Contact
php bin/console make:migration
php bin/console doctrine:make:migration
php bin/console make:entity 
//->Application ATTENTION relation one to one à définir avec Contact.
php bin/console make:migration
php bin/console doctrine:make:migration
php bin/console make:crud
//-> Application
//->Application
//Aller dans src/Form/ApplicationType.php
use App\Entity\Contact;
           ->add('contact',ContactType::class)
                /* [
                    'class' => Contact::class,
                    'choice_label' => 'Contact',
                ]*/
-------------------------------------------------------------------------------------------------------------------------
---------------------------------------TIRER UNE LISTE AVEC LA FONCTION FINDALL()----------------------------------------
//aller dans src/Controller/ApplicationController.php, remplacer
'applications' => $applicationRepository->findAll()
//par
'applications' => $applicationRepository->findAllOrdered()
//aller dans src/Repository/ApplicationRepository.php, après la fonction __construct(), et ajouter la fonction :
    public function findAllOrdered()
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT a FROM App\Entity\Application a ORDER BY a.postingDate DESC'
            )
            ->getResult();
    }
-------------------------------------------------------------------------------------------------------------------------
---------------------------------CHANGER LABEL FORMULAIRE||TRADUCTION ANGLAIS->FRANCAIS----------------------------------
//On est oblier d'ajouter le type avant d'ajouter le label.
//Aller dans src/Form/ApplicationType.php
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\DateType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Bridge\Doctrine\Form\Type\EntityType; //?? A VERIFIER
use Symfony\Bridge\Doctrine\Form\Type\ChoiceType; //?? A VERIFIER
//exemple de correction à ajouter au $builder
->add('webSiteName', ****Type::class,  ['label' => "nom du site WEB"])
->add('**nom data base**', ****Type::class,  ['label' => "****"])

// Documentation officiel sur les Form Types References
https://symfony.com/doc/current/reference/forms/types.html
-------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------CSS-----------------------------------------------------------

//render DATE with bootstrap
use https://github.com/uxsolutions/bootstrap-datepicker
-------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------COMMANDES SYMFONY----------------------------------------------------
Créer || Modifier une entité || Entity
php bin/console make:entity
Après avoir fait des changements manuels dans l'entité
php bin/console make:entity --regenerate
créer un Menu
php bin/console ???? !_!
-------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------DEBUGG---------------------------------------------------------
//SQLSTATE[22001]: String data, right truncated: 1406 Data too long for column 'text_of_answer' at row 1
//Aller dans le terminal 
cd Epitech/Rendu/job_seekers_app
composer require doctrine/doctrine-migrations-bundle
php bin/console doctrine:migrations:generate
php bin/console doctrine:migrations:migrate
php bin/console doctrine:migrations:create
-------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------CASE----------------------------------------------------------
variable || champ || field == Camel CASE
class == Pascal CASE
routes 
nom de fichier >Controller && >Entity && >Form && > Repository == Pascal CASE
nom de fichier >templates == Snake CASE snake_case
nom de la route dans le fichier config>routes.yaml== Snake CASE
job_interview_new:
    path: /new/job_interview
    controller: App\Controller\JobInterviewController::new 
**nom_de_la_route**:
    path: /new/job_interview
    controller: App\Controller\JobInterviewController::new 
nom des classes dans CSS
class == kebab-case || dash-case || hyphenate-case
-------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------NOMMER---------------------------------------------------------
Nommer une route
essayer autant que possible de garder la corelation entre le nom de la route, son chemin et la fonction du cotrolleur dont
elle est issue.
-------------------------------------------------------------------------------------------------------------------------
----------------------------------------------ENTITY TYPE FORMULAIRE RADIO-----------------------------------------------
            ->add('textOfAnswer',ChoiceType::class,[
                'choices'  => [
                    "A recontacter." => "A recontacter.",
                    "Me recontacte." => "Me recontacte.",
                    "Entretien téléphonique." => "Entretien téléphonique.",
                    "Entretien à distance." => "Entretien à distance.",
                    "Entretien." => "Entretien.",
                    "Embauché(e)!" => "Embauché(e)!",
                ],
                
                'expanded' => true,
                'multiple' => false,
                'required' => false,
                'label' => "réponse",
                ])
-------------------------------------------------------------------------------------------------------------------------
----------------------------------------------ENTITY TYPE FORMULAIRE Menu Déroulant--------------------------------------
            ->add('textOfAnswer',ChoiceType::class,[
                'choices'  => [
                    "A recontacter." => "A recontacter.",
                    "Me recontacte." => "Me recontacte.",
                    "Entretien téléphonique." => "Entretien téléphonique.",
                    "Entretien à distance." => "Entretien à distance.",
                    "Entretien." => "Entretien.",
                    "Embauché(e)!" => "Embauché(e)!",
                ],
                'required' => false,
                'label' => "réponse",
                ])
-------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------ON CLIC || interactivité------------------------------------------------
utiliser le langage JQuery exemple : job_seekers_app/templates/application/_form.html.twig
-------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------CHAR LENGTH-------------------------------------------------------
//Lecture du tableau : 
Le nouveau champs je veux le nommer contiendra name, regardez dans le colonne 3 si vous voyez quelque chose d'approchant.
Si oui copier le length et le type dans 
- job_seekers_app/src/Entity/Xx.php &
- & dans /home/proton/Epitech/Rendu/job_seekers_app/src/Form/XxType.php
Si non renseignez le tableau avec le nouveau champs et ses attributs.

TYPE.PHP ----- TYPE ENTITY --- FIELD NAME ----------- LENGTH
--------------------------------------------------------------
TextType ----- string -------- name ----------------- 50
TextType ----- string -------- WEBSite--------------- 150
TextareaType - string -------- comments-------------- 1200
NumberType --- integer ------- floor ---------------- 3
TextType ----- string -------- way ------------------ 100
NumberType --- integer ------- street number -------- 100
NumberType --- integer ------- intenational potcode - 10
TextType ----- string -------- city ----------------- 100
CountryType -- string -------- country -------------- 45
ChoiceType --- string -------- text ----------------- 1200
TextType ----- string -------- title ---------------- 60
TelType ------ integer ------- telephone ------------ 14
EmailType ---- string -------- e-mail --------------- 320

//la différence entre string et text = string 255 char && text 30 000 char
-------------------------------------------------------------------------------------------------------------------------
